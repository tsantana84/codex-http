meta {
  name: Invalid Request
  type: http
  seq: 15
}

post {
  url: {{baseUrl}}/sessions/{{sessionId}}/messages
  body: json
  auth: none
}

body:json {
  {
    "images": []
  }
}

tests {
  test("should return 400 for missing message", function() {
    expect(res.getStatus()).to.equal(400);
    expect(res.getBody()).to.have.property('error');
    expect(res.getBody().error).to.equal('Message is required');
  });
}

docs {
  # Error Handling - Invalid Request
  
  Example of validation error when required fields are missing.
  
  **This request is missing the required 'message' field.**
  
  **Response:**
  ```json
  {
    "error": "Message is required"
  }
  ```
  
  **Common 400 Bad Request scenarios:**
  - Missing required fields
  - Invalid JSON format
  - Invalid data types
  - Malformed request body
  
  **Request Validation Best Practices:**
  ```javascript
  // Always validate before sending
  const requestBody = {
    message: message.trim(),
    images: images || []
  };
  
  if (!requestBody.message) {
    throw new Error('Message cannot be empty');
  }
  ```
}